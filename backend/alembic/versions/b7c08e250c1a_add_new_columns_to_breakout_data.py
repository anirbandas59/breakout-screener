"""Add new columns to breakout_data

Revision ID: b7c08e250c1a
Revises: 4f1ba500363f
Create Date: 2025-01-03 17:41:23.308837

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b7c08e250c1a'
down_revision: Union[str, None] = '4f1ba500363f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_breakout_data_date', table_name='breakout_data')
    # op.drop_index('ix_breakout_data_group_name', table_name='breakout_data')
    # op.drop_index('ix_breakout_data_id', table_name='breakout_data')
    # op.drop_index('ix_breakout_data_script_name', table_name='breakout_data')
    # op.drop_table('breakout_data')
    op.add_column("breakout_data", sa.Column(
        "open", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "high", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column("low", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "close", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "volume", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "previous_high", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column("cpr", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "res1", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "res2", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "supp1", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "supp2", sa.Float(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "breakout_indicator", sa.String(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "candle_indicator", sa.String(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "volume_indicator", sa.String(), nullable=True))
    op.add_column("breakout_data", sa.Column(
        "narrow_gap", sa.String(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    op.drop_column("breakout_data", "open")
    op.drop_column("breakout_data", "high")
    op.drop_column("breakout_data", "low")
    op.drop_column("breakout_data", "close")
    op.drop_column("breakout_data", "volume")
    op.drop_column("breakout_data", "previous_high")
    op.drop_column("breakout_data", "cpr")
    op.drop_column("breakout_data", "res1")
    op.drop_column("breakout_data", "res2")
    op.drop_column("breakout_data", "supp1")
    op.drop_column("breakout_data", "supp2")
    op.drop_column("breakout_data", "breakout_indicator")
    op.drop_column("breakout_data", "candle_indicator")
    op.drop_column("breakout_data", "volume_indicator")
    op.drop_column("breakout_data", "narrow_gap")
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('breakout_data',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('script_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('group_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    # sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='breakout_data_pkey')
    # )
    # op.create_index('ix_breakout_data_script_name', 'breakout_data', ['script_name'], unique=False)
    # op.create_index('ix_breakout_data_id', 'breakout_data', ['id'], unique=False)
    # op.create_index('ix_breakout_data_group_name', 'breakout_data', ['group_name'], unique=False)
    # op.create_index('ix_breakout_data_date', 'breakout_data', ['date'], unique=False)
    # ### end Alembic commands ###
